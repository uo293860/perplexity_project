package com.example.petmanagement.config;

import com.example.petmanagement.entity.Household;
import com.example.petmanagement.entity.Pet;
import com.example.petmanagement.service.HouseholdService;
import com.example.petmanagement.service.PetService;
import lombok.AllArgsConstructor;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

import java.util.Arrays;

@Component
@AllArgsConstructor
public class DataInitializer implements CommandLineRunner {

    //@Autowired - This was generated by Perplexity, but it is better practice to use the @AllArgsConstructor
    private HouseholdService householdService; // Uses field injection instead of @AllArgsConstructor

    //@Autowired - This was generated by Perplexity, but it is better practice to use the @AllArgsConstructor
    private PetService petService;

    private final UserDataInitializer userDataInitializer;

    @Override
    public void run(String... args) {
        // Create and save households
        Household household1 = new Household("D01AB12", 3, 4, true, null);
        Household household2 = new Household("D02CD34", 2, 3, false, null);

        householdService.createHousehold(household1);
        householdService.createHousehold(household2);

        // Create and save pets
        Pet pet1 = new Pet(null, "Buddy", "Dog", "Labrador", 5, household1);
        Pet pet2 = new Pet(null, "Whiskers", "Cat", "Siamese", 3, household1);
        Pet pet3 = new Pet(null, "Tweety", "Bird", "Canary", 1, household2);

        petService.createPet(pet1);
        petService.createPet(pet2);
        petService.createPet(pet3);

        // Update households with pets
        household1.setPets(Arrays.asList(pet1, pet2));
        household2.setPets(Arrays.asList(pet3));

        householdService.updateHousehold(household1);
        householdService.updateHousehold(household2);


        userDataInitializer.initializeUsers();
    }
}
